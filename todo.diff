+ coastline: shapefile base
+ coastline: shapefile parallel
+ coastline: fix coastline on tiles with features

+ db: store gzipped tiles
+ db: auto clean database
+ db: feature packing duplicates the used database on disk!
+ db: feature packs in extra file for fine grained memory management
+ db: variant (+types) for metadata

+ import: shared strings during second pass
+ import: parallelize
+ import: dont prepare fully seaside
+ import: prepare tiles with empty database?!
+ import: fragmentation management for planet file
- import: re-use feature in multiple layers (e.g. border rivers)
- import: shared_metadata and feature inserter flush in other thread
- import: count broken geometries (missing nodes)
- import: create pack index only if there are enough features in an entry

+ misc: update conf library
+ misc: clean up and improve perf logging
+ misc: top-level error handling
- misc: proper feature wraparound 180/-180 <-> artifacts on island?!
- misc: some tiles mising on lower z for full coastlines
- misc: improve geometry clipping: compute unclipped z-range

+ render: metadata completed zoom levels
+ render: fast bounding box check in deserialize (same as zoomlevel)
+ render: bugs whole tile -> blue with roads and rail (z8 brandenburg)
+ render: iterate -> zoom level 0: 2tiles?!
+ render: iterate -> coastline: south america missing?!
+ render: fix get_tile bottleneck: iteration/skip is slower than rendering (z>=11)
+ render: use clipper for geometry clipping
+ render: deduplicate features on higher zoom levels
+ render: connect consecutive ways with same metadata
+ render: detailed layer-by-layer stats in tile builder
- render: multipolygons https://www.openstreetmap.org/relation/5429059 -> sandbank under water?
- render: combine seaside on higer z levels
- render: order shapes by area
- render: skip simplify for simple features (polygon with 4 points -> binary)
- render: merge nearby shapes with equal properties

+ perf: improve performance
+ perf: database disk usage statistics
+ perf: compact feature storage: 4kb pages of lmdb lead to bad memory efficiency
+ perf: import europe
+ perf: import planetfile
- perf: custom arena/block allocator for geometry stuff
- perf: compress tiles with https://github.com/ebiggers/libdeflate/blob/master/libdeflate.h
? perf: use lz4 compression in pack file

+ profile: zoomlevel depends on area
+ profile: road names
+ profile: error if layer ist not set?!
- profile: handling of railway zoom levels / way types
- profile: simplified grayish profile for background use
- profile: administrative features
- profile: respect Key:layer
- profile: road oneway direction arrows
- profile: air road
- profile: tram
- profile: scotland greens
- profile: milano roadside greens
- profile: improve landuse railway
- profile: power / substation
- profile: poi shopping
- profile: poi public transport
- profile: poi traffic lights
- profile: location names
- profile: woog steeg = building
- profile: foreign names?!

+ server: add fonts for all languages
+ server: remove net-old -> boost beast minimal http example?
+ server: parallelize
+ server: check if database file does exist
+ server: make port configurable
- server: add rtl text plugin in mapboxgl
- server: better live statistics (wait some time to aggregate multiple requests)

