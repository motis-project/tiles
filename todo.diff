+ coastline: shapefile base DONE
+ coastline: shapefile parallel DONE
+ coastline: fix coastline on tiles with features
+ db: store gzipped tiles DONE
+ db: auto clean database DONE
+ render: metadata completed zoom levels DONE
+ render: fast bounding box check in deserialize (same as zoomlevel) DONE
+ render: bugs whole tile -> blue with roads and rail (z8 brandenburg)
+ perf: improve performance DONE
+ perf: database disk usage statistics
+ perf: compact feature storage: 4kb pages of lmdb lead to bad memory efficiency
- perf: import europe
- perf: import planetfile
+ profile: zoomlevel depends on area DONE
+ profile: road names
+ iterate -> zoom level 0: 2tiles?! DONE
+ iterate -> coastline: south america missing?! DONE
+ fix get_tile bottleneck: iteration/skip is slower than rendering (z>=11)
+ feature packing duplicates the used database on disk!
+ use clipper for geometry clipping

== HIGH PRIO:
- occasionally: bus error!

- render: order shapes by area
- skip simplify for simple features (polygon with 4 points -> binary)
- improve geometry clipping: compute unclipped z-range

== LOW PRIO:
- proper feature wraparound 180/-180 <-> artifacts on island?!
- prepare tiles with empty database?!

- profile: warning if layer ist not set?!

- optimize: merge nearby shapes with equal properties

- profile: respect Key:layer
- profile: road oneway direction
- profile: air road
- profile: tram

- profile: improve landuse railway
- profile: power / substation
- profile: rail main/greyed out

- profile: poi shopping
- profile: poi public transport
- profile: poi traffic lights
- profile: location names
- profile: woog steeg = building
- profile: foreign names?!

- database: variant for metadata
- geometry: custom block allocator for geometry stuff
- render: parallelize
- import: parallelize

- prepare tiles: investigate: some tiles mising on lower z for full coastlines
- better live statistics (wait some time to aggregate multiple requests)

- implement custom arena allocator
- use https://github.com/ebiggers/libdeflate/blob/master/libdeflate.h for compression

- create index only if there are enough features in an entry
